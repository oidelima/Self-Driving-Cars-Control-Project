function dpdot_dp = jacobianDynamics(X, U, state_index)
    Nw=2;
    f=0.01;
    Iz=2667;
    a=1.35;
    b=1.45;
    By=0.27;
    Cy=1.2;
    Dy=0.7;
    Ey=-1.6;
    Shy=0;
    Svy=0;
    m=1400;
    g=9.806;

    delta_f=U(1);
    F_x=U(2);
    syms x u y v psi r delta_f F_x

    %slip angle functions in degrees
    a_f=(180/pi)*(delta_f-atan2(v+a*r,u));
    a_r=(180/pi)*(-atan2((v-b*r),u));

    %Nonlinear Tire Dynamics
    phi_yf=(1-Ey)*(a_f+Shy)+(Ey/By)*atan(By*(a_f+Shy));
    phi_yr=(1-Ey)*(a_r+Shy)+(Ey/By)*atan(By*(a_r+Shy));

    F_zf=b/(a+b)*m*g;
    F_yf=F_zf*Dy*sin(Cy*atan(By*phi_yf))+Svy;

    F_zr=a/(a+b)*m*g;
    F_yr=F_zr*Dy*sin(Cy*atan(By*phi_yr))+Svy;

    F_total=sqrt((Nw*F_x)^2+(F_yr^2));
    F_max=0.7*m*g;

    if F_total>F_max

        F_x=F_max/F_total*F_x;

        F_yr=F_max/F_total*F_yr;
    end

    %vehicle dynamics
    dzdt_dvar= [u*cos(psi)-v*sin(psi);...
              (-f*m*g+Nw*F_x-F_yf*sin(delta_f))/m+v*r;...
              u*sin(psi)+v*cos(psi);...
              (F_yf*cos(delta_f)+F_yr)/m-u*r;...
              r;...
              (F_yf*a*cos(delta_f)-F_yr*b)/Iz];
          
    if state_index == 1
    dpdot_dt = subs(f,X(1), X(2), X(3), X(4), X(5), X(6), U(1), U(2))
end